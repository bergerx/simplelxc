Not for production yet, project is still a baby for now, far from being mature.
But if you understand bash and lxc, you can test the code.

Main objective of simplelxc is to create new lxc servers on a Debian machine as simple as this:
$ sudo aptitude install simplelxc
$ sudo simplelxc create test1
$ sudo simplelxc login test1

Planning command line reference:

# Guest system operations, you can omit "guest" parameter
simplelxc [guest] list
simplelxc [guest] create <guest_name> [<ip>] [<template_name>]
simplelxc [guest] copy <guest_name> <guest_name> [<ip>]
simplelxc [guest] login <guest_name> # logs in as root
simplelxc [guest] start|stop|restart <guest_name>
simplelxc [guest] destroy <guest_name>
simplelxc [guest] info <guest_name>
simplelxc [guest] pack <guest_name>
simplelxc [guest] unpack <file_name>

# Template operations, typically you dont need to run these manually
# Template's are root file systems with hostname as hostaname-<templatename> and ip address ad 127.0.0.2,
# when creating a guest we just replace this two with original values of the guest system.
simplelxc template list
simplelxc template create [<template_name> [<debian_release_name>]]
simplelxc template copy <template_name> <template_name>
simplelxc template chroot <template_name>
simplelxc template destroy <template_name>

# Host system operations you dont need to call these by hand normally
simplelxc host prepare
simplelxc host check

# Current installation procedure, normally a script or package should do this
sudo aptitude install lxc bridge-utils debootstrap iptables iproute apt-cacher-ng
sudo cp config /etc/simplelxc
sudo mkdir /usr/lib/simplelxc
sudo cp guest-* template-* host-* /usr/lib/simplelxc/
sudo sed 's!.*BIN_DIR.*!BIN_DIR=/usr/lib/simplelxc!g'  # editing "BIN_DIR" parameter is enough
sudo cp _simplelxc /etc/bash_completion.d/simplelxc

# try these
sudo sl <tab><tab>
sudo sl cr<tab>
sudo sl start <tab>

